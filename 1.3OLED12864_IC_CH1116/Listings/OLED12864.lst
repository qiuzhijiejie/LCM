C51 COMPILER V9.60.7.0   OLED12864                                                         12/13/2024 18:56:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN .\Objects\OLED12864.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE OLED12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\OLED12864.lst) OBJECT(.\Objects\OLED12864.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          #include "picture.h"
   4          
   5          sbit OLED_ROM_CS        = P1^2;   //L 有效,字库片选
   6          sbit OLED_READ_FS0      = P1^1;   //数据输出
   7          sbit OLED_CS    = P1^0;   //L 有效,屏片选
   8          sbit OLED_DC            = P3^2;   //L:command; H:data,命令/数据 
   9          sbit OLED_SCL   = P3^0;   //serial clock input时钟
  10          sbit OLED_SDA           = P3^1;   //serial data input数据输入
  11          sbit KEY    = P2^0;
  12          
  13          
  14          void Delay(unsigned int time)
  15          {
  16   1                unsigned int i,j;
  17   1                for(i=0;i<time;i++)
  18   1                   for(j=0;j<20000;j++)
  19   1                       {;}
  20   1      }
  21          
  22          
  23          void Ins_trans(unsigned char command)
  24          {
  25   1          unsigned char counter;
  26   1                OLED_CS=0;
  27   1                OLED_DC=0;
  28   1          for(counter=0;counter<8;counter++)
  29   1             {
  30   2                   OLED_SCL=0;
  31   2               OLED_SDA=(command&0x80)>>7;
  32   2               command=command<<1;
  33   2                     _nop_();
  34   2                   OLED_SCL=1;
  35   2                   //  _nop_();
  36   2                   _nop_();
  37   2                   OLED_SCL=0;
  38   2              }
  39   1              OLED_DC=1;
  40   1         OLED_CS=1;
  41   1       }
  42          
  43           void Data_trans(unsigned char command)
  44          {
  45   1          unsigned char counter;
  46   1                OLED_CS=0;
  47   1                OLED_DC=1;
  48   1          for(counter=0;counter<8;counter++)
  49   1             {
  50   2               OLED_SCL=0;
  51   2                   OLED_SDA=(command&0x80)>>7;
  52   2                              command=command<<1;
  53   2                     _nop_();
  54   2                   OLED_SCL=1;
C51 COMPILER V9.60.7.0   OLED12864                                                         12/13/2024 18:56:40 PAGE 2   

  55   2                    // _nop_();
  56   2                   _nop_();
  57   2                   OLED_SCL=0;
  58   2             }  
  59   1              OLED_DC=1;
  60   1         OLED_CS=1;
  61   1       }
  62          
  63          
  64           
  65          void Column_set(unsigned char column)
  66          {
  67   1                   Ins_trans(0x10|(column>>4));
  68   1                   Ins_trans(0x00|(column&0x0f));
  69   1      }
  70          
  71          
  72          void Page_set(unsigned char page)
  73          {
  74   1                  Ins_trans(0xb0+page);
  75   1      }
  76          
  77          
  78          void Screen_FillClear(unsigned char FC)
  79          {
  80   1         unsigned char page,column;
  81   1        for(page=0;page<8;page++)             //page loop
  82   1        {
  83   2                 Page_set(page);
  84   2                 Column_set(2);
  85   2                 for(column=0;column<128;column++)    //column loop
  86   2                      {
  87   3                        Data_trans(FC);
  88   3                      }
  89   2        }
  90   1      }
  91          
  92          
  93          
  94          void OLED_fullCOL(unsigned char oddData, unsigned char evenData)
  95          {
  96   1          unsigned char page, column;
  97   1          for (page = 0; page < 8; page++) 
  98   1          { 
  99   2              Page_set(page);
 100   2              Column_set(0);  
 101   2              for (column = 0; column < 130; column++) // column loop
 102   2              {
 103   3               
 104   3                  if (column % 2 == 0)
 105   3                  {
 106   4                      Data_trans(oddData); 
 107   4                  }
 108   3                  else
 109   3                  {
 110   4                      Data_trans(evenData); 
 111   4                  }
 112   3              }
 113   2          }
 114   1      }
 115          
 116          
C51 COMPILER V9.60.7.0   OLED12864                                                         12/13/2024 18:56:40 PAGE 3   

 117          void Picture_display(unsigned char *ptr_pic)
 118                  {
 119   1                unsigned char page,column;
 120   1                for(page=0;page<(64/8);page++)        //page loop
 121   1                   {
 122   2                         Page_set(page);
 123   2                         Column_set(2);
 124   2                         for(column=0;column<128;column++)    //column loop
 125   2                            {
 126   3                           Data_trans(*ptr_pic++);
 127   3                        }
 128   2                       }
 129   1                Delay(15);
 130   1              }
 131          
 132                  
 133          void Initial()
 134          {
 135   1                      Ins_trans(0xAE);//--turn off oled panel
 136   1      
 137   1                      Ins_trans(0x02);//--set low column address
 138   1                      Ins_trans(0x10);//--set high column address
 139   1      
 140   1                      Ins_trans(0x40);//--set start line address
 141   1      
 142   1                      Ins_trans(0xB0);//--set page address
 143   1      
 144   1                      Ins_trans(0x81);//--set contrast control register
 145   1                      Ins_trans(0xFF);
 146   1              
 147   1                      Ins_trans(0xA1);//--set segment re-map 127 to 0   a0:0 to seg127
 148   1                      Ins_trans(0xA4);//--set normal display
 149   1                      Ins_trans(0xA6);//--set indication display
 150   1                      Ins_trans(0xC8);//--set com(N-1)to com0  c0:com0 to com(N-1)
 151   1      
 152   1                      Ins_trans(0xA8);//--set multiples ratio(1to64)
 153   1                      Ins_trans(0x3F);//--1/64 duty
 154   1      
 155   1                      Ins_trans(0xD5);//--set display clock divide ratio/oscillator frequency
 156   1                      Ins_trans(0x80);//--set divide ratio
 157   1      
 158   1                      Ins_trans(0xD3);//--set display offset
 159   1                      Ins_trans(0x00);//--not offset
 160   1      
 161   1                      Ins_trans(0xAD);//--OLED_DC-OLED_DC ON/OFF Mode Set
 162   1                      Ins_trans(0x8B);//--8A:OLED_DC-OLED_DC is disable,8B:OLED_DC-OLED_DC will be turned on when display on.(
             -POR)
 163   1      
 164   1                      Ins_trans(0xDA);//--set com pins hardware configuration
 165   1                      Ins_trans(0x12);
 166   1      
 167   1                      Ins_trans(0xDB);//--set vcomh
 168   1                      Ins_trans(0x40);
 169   1      
 170   1                      Ins_trans(0xD9);//--set charge period
 171   1                      Ins_trans(0xF1);
 172   1      
 173   1                      Ins_trans(0xAF);//--turn on oled panel
 174   1      }
 175          
 176          //==================display a piture of 16*16 dots================
 177          void display_zifu_16x16(char page,char column,char *dp)
C51 COMPILER V9.60.7.0   OLED12864                                                         12/13/2024 18:56:40 PAGE 4   

 178          {
 179   1              char i,j;
 180   1              for(j=0;j<2;j++)
 181   1              {
 182   2                      
 183   2                      Page_set(page+j);               
 184   2                      Column_set(column); 
 185   2                      for (i=0;i<16;i++)
 186   2                      {       
 187   3                              Data_trans(*dp);                
 188   3                              dp++;
 189   3                      }
 190   2              }
 191   1      }
 192          
 193          void display_zifu_16x8(char page,char column,char *dp)
 194          {
 195   1              char i,j;
 196   1              for(j=0;j<2;j++)
 197   1              {
 198   2                      
 199   2                      Page_set(page+j);               
 200   2                      Column_set(column); 
 201   2                      for (i=0;i<8;i++)
 202   2                      {       
 203   3                              Data_trans(*dp);                
 204   3                              dp++;
 205   3                      }
 206   2              }
 207   1      }
 208          
 209          void Display_Sequence()
 210          {
 211   1      
 212   1              Picture_display(picture_tab);
 213   1          display_zifu_16x16(1, (8 + 16), guang);
 214   1          display_zifu_16x16(1, (8 + 16 * 2), dong);
 215   1          display_zifu_16x16(1, (8 + 16 * 3), ye);
 216   1          display_zifu_16x16(1, (8 + 16 * 4), hui);
 217   1          display_zifu_16x16(1, (8 + 16 * 5), ke);
 218   1              
 219   1          display_zifu_16x16(4, (8 + 16 ),ji);
 220   1          display_zifu_16x16(4, (8 + 16 * 2), you);
 221   1          display_zifu_16x16(4, (8 + 16 * 3), xian);
 222   1          display_zifu_16x16(4, (8 + 16 * 4), gong);
 223   1          display_zifu_16x16(4, (8 + 16 * 5), si);
 224   1          display_zifu_16x16(4, (8 + 16 * 6), gangtan);
 225   1      }
 226          
 227          
 228          void Display_Sequence2()
 229          {
 230   1      
 231   1              Picture_display(picture_tab);
 232   1          display_zifu_16x8(1,  8 , one);
 233   1          display_zifu_16x8(1, (8 + 12 * 1), two);
 234   1          display_zifu_16x8(1, (8 + 12 * 2), eight);
 235   1          display_zifu_16x8(1, (8 + 12 * 3), cheng);
 236   1          display_zifu_16x8(1, (8 + 12 * 4), six);
 237   1          display_zifu_16x8(1, (8 + 12 * 5),four);
 238   1              display_zifu_16x8(1, (8 + 12 * 6), d);
 239   1          display_zifu_16x8(1, (8 + 12 * 7), o);
C51 COMPILER V9.60.7.0   OLED12864                                                         12/13/2024 18:56:40 PAGE 5   

 240   1          display_zifu_16x8(1, (8 + 12 * 8), t);
 241   1              display_zifu_16x8(1, (8 + 12 * 9),s);
 242   1      
 243   1              
 244   1              
 245   1          display_zifu_16x8(4,  (8 + 10), yi  );
 246   1          display_zifu_16x8(4,  (8 + 10  * 2), dian);
 247   1          display_zifu_16x8(4,  (8 + 10  * 3), shang);
 248   1              
 249   1          display_zifu_16x16(4, (8 + 13 * 4), dai);
 250   1              display_zifu_16x16(4, (8 + 13*  5), zi);
 251   1          display_zifu_16x16(4, (8 + 13 * 6), ku);
 252   1              
 253   1      }
 254          
 255          
 256          unsigned int ReadKey() 
 257          {
 258   1          if (KEY == 0) 
 259   1              { 
 260   2              Delay(1);  
 261   2              if (KEY == 0) 
 262   2                      {  
 263   3                  while (KEY == 0);  
 264   3                  return 1; 
 265   3              }
 266   2          }
 267   1          return 0;  
 268   1      }
 269          
 270          
 271          
 272          void PerformScreenFillSequence() 
 273          {
 274   1          Screen_FillClear(0xAA);
 275   1          Delay(5);
 276   1          Screen_FillClear(0x55);
 277   1          Delay(5);
 278   1          OLED_fullCOL(0xFF, 0x00);
 279   1          Delay(5);
 280   1          OLED_fullCOL(0x00, 0xFF);
 281   1          Delay(5);
 282   1          OLED_fullCOL(0xAA, 0x55);
 283   1          Delay(5);
 284   1          OLED_fullCOL(0x55, 0xAA);
 285   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    885    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
